{"version":3,"file":"layouts-VerticalWizardLayout-VerticalWizardLayout-stories.a2199402.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;AA6BA;;;;;;AAMA;;;;;;;;;AAWA;;;;;;;;;AAWA;;;;;;AAQA;;AAEA;AACA;;AAEA;;;;;;AAQA;AAWA;;AAaA;AACA;AACA;AACA;AACA;AACA;;;;;;;AASA;AACA;;;AAGA;AACA","sources":["webpack://@rocket.chat/layout/./src/components/FormPageLayout/FormPageLayout.styles.tsx"],"sourcesContent":["import styled from '@rocket.chat/styled';\n\nimport { sans } from '../../helpers/tokenFontFamilies';\n\nexport const Wrapper = styled('div')`\n  width: 100%;\n  box-sizing: border-box;\n  padding: 28px 16px;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: center;\n\n  @media (min-width: 1440px) {\n    flex-flow: row nowrap;\n    align-items: start;\n    padding-inline: 0;\n    width: 100%;\n    max-width: 1152px;\n  }\n`;\n\nconst asideProps = ({\n  justifyContent: _justifyContent,\n  ...props\n}: {\n  justifyContent?: string;\n}) => props;\n\nexport const Aside = styled('div', asideProps)`\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  padding-block-end: 16px;\n  justify-content: ${(p) => (p.justifyContent ? p.justifyContent : '')};\n  max-width: 576px;\n\n  @media (min-width: 1440px) {\n    align-items: flex-start;\n\n    flex: 1 0 50%;\n    padding-inline: 32px;\n  }\n`;\n\nexport const Content = styled('div')`\n  width: 100%;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n\n  @media (min-width: 1440px) {\n    flex: 1 0 50%;\n  }\n`;\n\nexport const Logo = styled('div')`\n  padding-block-end: 28px;\n\n  @media (min-width: 1440px) {\n    padding-block-end: 32px;\n  }\n`;\n\nexport const Title = styled('h1')`\n  padding-block-end: 32px;\n  font-size: ${String(48 / 16)}rem;\n  font-family: ${sans};\n  font-weight: 800;\n  line-height: ${String(64 / 16)}rem;\n  text-align: center;\n\n  @media (min-width: 1440px) {\n    text-align: start;\n  }\n`;\n\nexport const TitleHighlight = styled(\n  'span',\n  ({\n    fontColor: _fontColor,\n    isDark: _isDark,\n    ...props\n  }: {\n    fontColor?: string;\n    isDark?: boolean;\n  }) => props,\n)`\n  color: ${(p) => (p.isDark ? '#76B7FC' : '#095AD2')};\n  display: inline-block;\n`;\n\nconst SubTitleFormPageProps = ({\n  fontColor: _fontColor,\n  fontWeight: _fontWeight,\n  ...props\n}: {\n  fontColor?: string;\n  fontWeight?: string;\n}) => props;\n\nexport const Subtitle = styled('h2', SubTitleFormPageProps)`\n  font-size: ${String(16 / 16)}rem;\n  line-height: ${String(22 / 16)}rem;\n  font-family: ${sans};\n  color: ${(p) => (p.fontColor ? p.fontColor : '')};\n  font-weight: ${(p) => (p.fontWeight ? p.fontWeight : '500')};\n  text-align: center;\n\n  @media (min-width: 1440px) {\n    padding-block-end: 20px;\n    text-align: start;\n  }\n`;\n\nexport const Description = styled('div')`\n  font-family: ${sans};\n\n  // p2\n  font-size: ${String(14 / 16)}rem;\n  line-height: ${String(20 / 16)}rem;\n\n  @media (min-width: 1440px) {\n    display: unset;\n  }\n`;\n"],"names":[],"sourceRoot":""}