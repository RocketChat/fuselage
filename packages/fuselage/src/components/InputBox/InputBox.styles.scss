@use '../../styles/lengths.scss';
@use '../../styles/typography.scss';

.rcx-input-box__wrapper,
%rcx-input-box {
  position: relative;

  display: inline-flex;

  flex-flow: row nowrap;

  align-items: flex-start;

  flex-grow: 1;

  min-width: lengths.size(144);

  padding-block: lengths.padding(8);
  padding-inline: lengths.padding(16) - lengths.border-width(default, rem);

  vertical-align: baseline;

  word-break: break-all;

  outline: 0;

  @extend %input;

  &:invalid,
  &.invalid {
    @extend %input--invalid;
  }

  *:disabled &,
  &:disabled,
  &.disabled {
    cursor: not-allowed;
    pointer-events: none;
  }
}

.rcx-input-box__addon {
  @include clickable;

  flex-flow: row nowrap;

  align-items: flex-start;
  flex: 0 0 auto;
}

@mixin with-colors(
  $color,
  $placeholder-color,
  $focus-caret-color,
  $active-caret-color,
  $disabled-color
) {
  color: #{$color};

  // TODO: fix placeholder performance issue
  // &::placeholder {
  //   color: #{ $placeholder-color };
  // }

  &.rcx-input-box--placeholder-visible {
    color: #{$placeholder-color};
  }

  &:focus,
  &.focus {
    caret-color: #{$focus-caret-color};
  }

  &:active,
  &.active {
    caret-color: #{$active-caret-color};
  }

  *:disabled &,
  &:disabled,
  &.disabled {
    color: #{$disabled-color};
  }
}

@mixin with-icon-addon-colors(
  $color,
  $focus-caret-color,
  $focus-icon-color,
  $disabled-color
) {
  & + .rcx-input-box__addon {
    color: #{$color};
  }

  .rcx-input-box__wrapper.focus > & {
    caret-color: #{$focus-caret-color};
  }

  &:focus + .rcx-input-box__addon,
  &.focus + .rcx-input-box__addon,
  .rcx-input-box__wrapper.focus > & + .rcx-input-box__addon {
    color: #{$focus-icon-color};
  }

  .rcx-input-box__wrapper.disabled > & {
    color: #{$disabled-color};
  }

  *:disabled & + .rcx-input-box__addon,
  &:disabled + .rcx-input-box__addon,
  &.disabled + .rcx-input-box__addon,
  .rcx-input-box__wrapper.disabled > & + .rcx-input-box__addon {
    color: #{$disabled-color};
  }
}

.rcx-input-box {
  position: relative;

  display: inline-flex;

  flex: 1 0 auto;

  min-width: lengths.size(128);

  user-select: initial;

  vertical-align: baseline;

  white-space: nowrap;

  word-break: break-all;

  outline: 0;

  background-color: transparent;

  @include typography.use-font-scale(p2);
  @include typography.use-text-ellipsis;

  &--type-textarea {
    @extend %--with-scrollbars;

    overflow: auto;

    resize: none;
    vertical-align: middle;
    white-space: initial;
  }

  &--type-date,
  &--type-time {
    &::-webkit-inner-spin-button,
    &::-webkit-calendar-picker-indicator {
      position: absolute;
      inset: 0;

      width: auto;
      height: auto;

      cursor: pointer;

      color: transparent;
      background: transparent;
    }
    -webkit-text-fill-color: $input-colors-color;
  }

  &--type-select {
    @extend %--with-scrollbars;

    overflow: auto;
    appearance: none;

    &.rcx-input-box--multiple {
      vertical-align: middle;
    }
  }

  &:not(.rcx-input-box--undecorated) {
    min-width: lengths.size(128);
    min-height: lengths.size(40);

    padding: lengths.padding(8)
      (lengths.padding(16) - lengths.border-width(default, rem));

    @extend %input;

    &:invalid,
    &.invalid {
      @extend %input--invalid;
    }
  }

  &__wrapper:has(.rcx-input-box--small) {
    align-items: center;

    min-width: lengths.size(112);
    max-height: lengths.size(28);
    padding: lengths.padding(4) lengths.padding(16);
  }

  &--small {
    @include typography.use-font-scale(c1);

    &:not(.rcx-input-box--undecorated) {
      @extend %input;
      min-width: lengths.size(112);

      min-height: lengths.size(28);
      padding: lengths.padding(4) lengths.padding(16);

      &:invalid,
      &.invalid {
        @extend %input--invalid;
      }
    }
  }

  @include with-colors(
    $color: $input-colors-color,
    $placeholder-color: $input-colors-placeholder-color,
    $focus-caret-color: $input-colors-focus-caret-color,
    $active-caret-color: $input-colors-active-caret-color,
    $disabled-color: $input-colors-disabled-color
  );

  &:invalid,
  &.invalid {
    @include with-colors(
      $color: $input-colors-invalid-color,
      $placeholder-color: $input-colors-invalid-placeholder-color,
      $focus-caret-color: $input-colors-invalid-focus-caret-color,
      $active-caret-color: $input-colors-invalid-active-caret-color,
      $disabled-color: $input-colors-invalid-disabled-color
    );

    @include with-icon-addon-colors(
      $color: $input-colors-invalid-color,
      $focus-caret-color: $input-colors-invalid-focus-caret-color,
      $focus-icon-color: $input-colors-invalid-focus-icon-color,
      $disabled-color: $input-colors-invalid-disabled-color
    );
  }

  *:disabled &,
  &:disabled,
  &.disabled {
    cursor: not-allowed;
  }

  @include with-icon-addon-colors(
    $color: $input-colors-color,
    $focus-caret-color: $input-colors-focus-caret-color,
    $focus-icon-color: $input-colors-focus-icon-color,
    $disabled-color: $input-colors-disabled-color
  );

  *:disabled & + .rcx-input-box__addon,
  &:disabled + .rcx-input-box__addon,
  &.disabled + .rcx-input-box__addon {
    pointer-events: none;
  }

  .rcx-input-box__wrapper > & {
    width: lengths.size(none);
    min-width: lengths.size(none);

    &--small {
      padding: lengths.padding(none);
    }
  }
}

.rcx-input-box__placeholder {
  @include typography.use-text-ellipsis;
  white-space: nowrap;

  @include typography.use-font-scale(p2);
  color: #{$input-colors-placeholder-color};
}

.rcx-input-box__option {
  @include typography.use-text-ellipsis;
  white-space: nowrap;

  @include typography.use-font-scale(p2);
  color: #{$input-colors-color};
}

.rcx-skeleton__input {
  display: inline-flex;

  flex: 1 0 lengths.size(none);

  min-width: lengths.size(128);
  min-height: lengths.size(40);

  padding: (lengths.padding(12) - lengths.border-width(default, rem))
    (lengths.padding(16) - lengths.border-width(default, rem));

  vertical-align: baseline;

  color: #{$input-colors-color};

  border-width: lengths.border-width(default);
  border-color: #{$input-colors-border-color};
  border-radius: theme('input-border-radius', lengths.border-radius(medium));
  background-color: #{$input-colors-background-color};

  @include typography.use-font-scale(p2);
  @include typography.use-text-ellipsis;
}
