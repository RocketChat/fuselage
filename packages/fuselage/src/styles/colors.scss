@use 'sass:color';
@use 'sass:list';
@use 'sass:map';
@use 'sass:math';
@use '~@rocket.chat/fuselage-tokens/dist/colors.scss' as token-colors;

$-map-type-to-prefix: (
  neutral: 'n',
  primary: 'p',
  info: 'i',
  success: 's',
  warning: 'w',
  warning-alternative: 'o',
  danger: 'd',
  service-1: 's1-',
  service-2: 's2-',
);

@function _get-palette-color($type, $grade, $alpha) {
  @if not($grade % 50 == 0 and math.div($grade, 50) >= 1) {
    @error 'invalid color grade';
  }

  @if not($alpha == null or ($alpha >= 0 and $alpha <= 1)) {
    @error 'invalid color alpha';
  }

  $prefix: map.get($-map-type-to-prefix, $type);
  @if not $prefix {
    @error 'invalid color type';
  }

  $base-color: map.get(token-colors.$colors, #{$prefix}#{$grade});

  @if not $base-color {
    @error 'invalid color reference';
  }

  @if ($alpha != null) {
    @return (
      --rcx-color-#{$type}-#{$grade}-#{$alpha * 100},
      color.change($base-color, $alpha: $alpha)
    );
  }

  @return (--rcx-color-#{$type}-#{$grade}, $base-color);
}

@function neutral($grade, $alpha: null) {
  $pair: _get-palette-color(neutral, $grade, $alpha);
  @return var(list.nth($pair, 1), list.nth($pair, 2));
}

@function primary($grade, $alpha: null) {
  $pair: _get-palette-color(primary, $grade, $alpha);
  @return var(list.nth($pair, 1), list.nth($pair, 2));
}

@function info($grade, $alpha: null) {
  $pair: _get-palette-color(info, $grade, $alpha);
  @return var(list.nth($pair, 1), list.nth($pair, 2));
}

@function success($grade, $alpha: null) {
  $pair: _get-palette-color(success, $grade, $alpha);
  @return var(list.nth($pair, 1), list.nth($pair, 2));
}

@function warning($grade, $alpha: null) {
  $pair: _get-palette-color(warning, $grade, $alpha);
  @return var(list.nth($pair, 1), list.nth($pair, 2));
}

@function warning-alternative($grade, $alpha: null) {
  $pair: _get-palette-color(warning-alternative, $grade, $alpha);
  @return var(list.nth($pair, 1), list.nth($pair, 2));
}

@function danger($grade, $alpha: null) {
  $pair: _get-palette-color(danger, $grade, $alpha);
  @return var(list.nth($pair, 1), list.nth($pair, 2));
}

@function service-1($grade, $alpha: null) {
  $pair: _get-palette-color(service-1, $grade, $alpha);
  @return var(list.nth($pair, 1), list.nth($pair, 2));
}

@function service-2($grade, $alpha: null) {
  $pair: _get-palette-color(service-2, $grade, $alpha);
  @return var(list.nth($pair, 1), list.nth($pair, 2));
}

$-surfaces: (
  light: white,
  tint: neutral(100),
  room: white,
  neutral: neutral(400),
  disabled: neutral(100),
  selected: neutral(450),
  hover: neutral(200),
  dark: neutral(900),
  featured: service-2(700),
  featured-hover: service-2(800),
  overlay: neutral(850),
);

@function surface($type) {
  $color: map.get($-surfaces, $type);
  @return var(--rcx-color-surface-#{$type}, $color);
}

$-font: (
  white: white,
  disabled: neutral(500),
  annotation: neutral(600),
  hint: neutral(700),
  secondary-info: neutral(700),
  default: neutral(800),
  titles-labels: neutral(900),
  info: primary(600),
  danger: danger(600),
  pure-black: neutral(800),
  pure-white: white,
);

@function font($type, $scape: false) {
  $color: map.get($-font, $type);

  @if $scape {
    @return $color;
  }

  @return var(--rcx-color-font-#{$type}, $color);
}

$-status-bullet: (
  online: success(650),
  away: warning(650),
  busy: danger(650),
  disabled: service-1(500),
  offline: neutral(700),
  loading: neutral(600),
);

@function status-bullet($type) {
  $color: map.get($-status-bullet, $type);
  @return var(--rcx-color-status-bullet-#{$type}, $color);
}

$-status-backgrounds: (
  success: success(200),
  warning: warning(200),
  warning-2: warning(100),
  danger: danger(200),
  service-1: service-1(200),
  service-2: service-2(200),
  info: primary(200),
);

@function status-background($type) {
  $color: map.get($-status-backgrounds, $type);
  @return var(--rcx-color-status-background-#{$type}, $color);
}

$-status-font: (
  on-success: success(800),
  on-warning: warning(800),
  on-warning-2: neutral(800),
  on-danger: danger(800),
  on-service-1: service-1(800),
  on-service-2: service-2(600),
  on-info: primary(600),
);

@function status-font($type) {
  $color: map.get($-status-font, $type);
  @return var(--rcx-color-status-font-#{$type}, $color);
}

$-strokes: (
  extra-light: neutral(250),
  light: neutral(500),
  medium: neutral(600),
  dark: neutral(700),
  extra-dark: neutral(800),
  extra-light-highlight: primary(200),
  highlight: primary(500),
  extra-light-error: danger(200),
  error: danger(500),
);

@function stroke($type) {
  $color: map.get($-strokes, $type);
  @return var(--rcx-color-stroke-#{$type}, $color);
}

$-badge-backgrounds: (
  level-1: neutral(600),
  level-2: primary(550),
  level-3: service-1(500),
  level-4: danger(550),
);

@function badge($type) {
  $color: map.get($-badge-backgrounds, $type);
  @return var(--rcx-color-badge-background-#{$type}, $color);
}

$shadow-colors: (
  highlight: primary(200),
  danger: danger(100),
  elevation-1: neutral(800, 0.1),
  elevation-2x: neutral(800, 0.08),
  elevation-2y: neutral(800, 0.12),
  elevation-border: stroke(extra-light),
);
@function shadow($type) {
  $color: map.get($shadow-colors, $type);
  @return var(--rcx-color-shadow-#{$type}, $color);
}

$-button-backgrounds: (
  // primary
  primary-default: primary(500),
  primary-hover: primary(600),
  primary-press: primary(700),
  primary-focus: primary(500),
  primary-keyfocus: primary(500),
  primary-disabled: primary(200),
  // secondary
  secondary-default: neutral(400),
  secondary-hover: neutral(500),
  secondary-press: neutral(600),
  secondary-focus: neutral(400),
  secondary-keyfocus: neutral(400),
  secondary-disabled: neutral(300),
  // danger
  danger-default: danger(500),
  danger-hover: danger(600),
  danger-press: danger(700),
  danger-focus: danger(500),
  danger-keyfocus: danger(500),
  danger-disabled: danger(200),
  // secondary-danger
  secondary-danger-default: neutral(400),
  secondary-danger-hover: neutral(500),
  secondary-danger-press: neutral(600),
  secondary-danger-focus: neutral(400),
  secondary-danger-keyfocus: neutral(400),
  secondary-danger-disabled: neutral(300),
  // warning
  warning-default: warning(400),
  warning-hover: warning(500),
  warning-press: warning(600),
  warning-focus: warning(400),
  warning-keyfocus: warning(400),
  warning-disabled: warning(200),
  // secondary-warning
  secondary-warning-default: neutral(400),
  secondary-warning-hover: neutral(500),
  secondary-warning-press: neutral(600),
  secondary-warning-focus: neutral(400),
  secondary-warning-keyfocus: neutral(400),
  secondary-warning-disabled: neutral(300),
  // success
  success-default: success(800),
  success-hover: success(900),
  success-press: success(1000),
  success-focus: success(800),
  success-keyfocus: success(800),
  success-disabled: success(200),
  // secondary-success
  secondary-success-default: neutral(400),
  secondary-success-hover: neutral(500),
  secondary-success-press: neutral(600),
  secondary-success-focus: neutral(400),
  secondary-success-keyfocus: neutral(400),
  secondary-success-disabled: neutral(300)
);

$-button-fonts: (
  // primary
  on-primary: white,
  on-primary-disabled: white,
  // secondary
  on-secondary: neutral(900),
  on-secondary-disabled: neutral(500),
  // danger
  on-danger: white,
  on-danger-disabled: white,
  // secondary-danger
  on-secondary-danger: danger(700),
  on-secondary-danger-disabled: danger(300),
  // warning
  on-warning: neutral(900),
  on-warning-disabled: neutral(600),
  // secondary-warning
  on-secondary-warning: warning(900),
  on-secondary-warning-disabled: warning(600),
  // success
  on-success: white,
  on-success-disabled: white,
  // secondary-success
  on-secondary-success: success(800),
  on-secondary-success-disabled: success(400),
  // disabled
  on-disabled: neutral(600)
);

@function button($type) {
  @if (map.get($-button-backgrounds, $type)) {
    $background: map.get($-button-backgrounds, $type);
    @return var(--rcx-color-button-background-#{$type}, $background);
  }
  @if map.get($-button-fonts, $type) {
    $foreground: map.get($-button-fonts, $type);
    @return var(--rcx-color-button-font-#{$type}, $foreground);
  }
  @error "Unknown button type #{$type}.";
}

$-neutral-alpha-level: (
  8: neutral(800, 0.08),
  10: neutral(800, 0.1),
  12: neutral(800, 0.12),
  50: neutral(800, 0.5),
);

@function surface-neutral-alpha($level) {
  @return map.get($-neutral-alpha-level, $level);
}

$-elevation-level: (
  border: stroke(extra-light),
  1: surface-neutral-alpha(10),
  '2x': surface-neutral-alpha(8),
  '2y': surface-neutral-alpha(12),
);

@function elevation($level) {
  @return map.get($-elevation-level, $level);
}
