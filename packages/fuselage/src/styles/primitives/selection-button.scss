@use '../lengths.scss';
@use '../mixins/interactivity.scss';
@use '../mixins/shadows.scss';
@use '../variables/button-colors.scss';
@use '../variables/input-colors.scss';

%selection-button__input {
  @extend %--visually-hidden;
}

%selection-button__fake {
  position: relative;

  height: lengths.size(20);

  border-width: lengths.border-width(default);
}

%selection-button__fake--empty {
  color: button-colors.$button-empty-color;
  border-color: button-colors.$button-empty-border-color;
  background-color: button-colors.$button-empty-background-color;
}

%selection-button__fake--empty--hovered {
  border-color: button-colors.$button-empty-hover-border-color;
  background-color: button-colors.$button-empty-hover-background-color;
  @include shadows.use-no-shadow;
}

%selection-button__fake--empty--active {
  border-color: button-colors.$button-empty-active-border-color;
  background-color: button-colors.$button-empty-active-background-color;
  @include shadows.use-no-shadow;
}

%selection-button__fake--empty--focused {
  border-color: button-colors.$button-empty-focus-border-color;
  background-color: button-colors.$button-empty-focus-background-color;
  @include shadows.use-focus-shadow(
    input-colors.$input-colors-focus-shadow-color
  );
}

%selection-button__fake--empty--disabled {
  color: button-colors.$button-empty-disabled-color;
  border-color: button-colors.$button-empty-disabled-border-color;
  background-color: button-colors.$button-empty-disabled-background-color;
}

%selection-button__fake--off {
  color: button-colors.$button-off-color;
  border-color: button-colors.$button-off-border-color;
  background-color: button-colors.$button-off-background-color;
}

%selection-button__fake--off--hovered {
  border-color: button-colors.$button-off-hover-border-color;
  background-color: button-colors.$button-off-hover-background-color;
  @include shadows.use-no-shadow;
}

%selection-button__fake--off--active {
  border-color: button-colors.$button-off-active-border-color;
  background-color: button-colors.$button-off-active-background-color;
  @include shadows.use-no-shadow;
}

%selection-button__fake--off--focused {
  border-color: button-colors.$button-off-focus-border-color;
  background-color: button-colors.$button-off-focus-background-color;
  @include shadows.use-focus-shadow(
    input-colors.$input-colors-focus-shadow-color
  );
}

%selection-button__fake--off--disabled {
  color: button-colors.$button-off-disabled-color;
  border-color: button-colors.$button-off-disabled-border-color;
  background-color: button-colors.$button-off-disabled-background-color;
}

%selection-button__fake--primary {
  color: button-colors.$button-primary-color;
  border-color: button-colors.$button-primary-border-color;
  background-color: button-colors.$button-primary-background-color;
}

%selection-button__fake--primary--hovered {
  border-color: button-colors.$button-primary-hover-border-color;
  background-color: button-colors.$button-primary-hover-background-color;
  @include shadows.use-no-shadow;
}

%selection-button__fake--primary--active {
  border-color: button-colors.$button-primary-active-border-color;
  background-color: button-colors.$button-primary-active-background-color;
  @include shadows.use-no-shadow;
}

%selection-button__fake--primary--focused {
  border-color: button-colors.$button-primary-focus-border-color;
  background-color: button-colors.$button-primary-focus-background-color;
  @include shadows.use-focus-shadow(
    input-colors.$input-colors-focus-shadow-color
  );
}

%selection-button__fake--primary--disabled {
  color: button-colors.$button-primary-disabled-color;
  border-color: button-colors.$button-primary-disabled-border-color;
  background-color: button-colors.$button-primary-disabled-background-color;
}

@mixin is-selection-button(
  $unchecked: 'empty',
  $indeterminate: null,
  $checked: 'primary'
) {
  position: relative;

  display: inline-flex;

  vertical-align: middle;

  @include interactivity.clickable;

  $styles: (
    unchecked: $unchecked,
    indeterminate: $indeterminate,
    checked: $checked,
  );

  $state-pseudo-classes: (
    default: null,
    hovered: ':hover',
    focused: ':focus',
    active: ':active',
    disabled: ':disabled',
  );

  $state-helper-classes: (
    default: null,
    hovered: '.is-hovered',
    focused: '.is-focused',
    active: '.is-active',
    disabled: '.is-disabled',
  );

  @each $value in unchecked, indeterminate, checked {
    $style: map-get($styles, $value);

    @if $style != null {
      $value-pseudo-class: if($value == unchecked, '', ':#{$value}');
      $input: #{&}__input#{$value-pseudo-class};

      @at-root &__input#{$value-pseudo-class} + &__fake {
        @extend %selection-button__fake--#{$style} !optional;
      }

      @each $state in default, hovered, focused, active, disabled {
        $state-pseudo-class: map-get($state-pseudo-classes, $state);
        $state-helper-class: map-get($state-helper-classes, $state);

        @at-root &__input#{$value-pseudo-class}#{$state-pseudo-class} + &__fake,
          &#{$state-helper-class} &__input#{$value-pseudo-class} + &__fake {
          @extend %selection-button__fake--#{$style}--#{$state} !optional;

          @if $state == disabled {
            cursor: not-allowed;
          }
        }
      }
    }
  }
}
