"use strict";(self.webpackChunk_rocket_chat_fuselage=self.webpackChunk_rocket_chat_fuselage||[]).push([[8311],{"./src/components/Icon/Icon.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AvailableIcons:()=>AvailableIcons,Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_rocket_chat_icons__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../icons/dist/index.js"),_rocket_chat_icons__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_rocket_chat_icons__WEBPACK_IMPORTED_MODULE_1__),react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/react/index.js"),_Box__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Box/index.ts"),_Divider__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Divider/index.tsx"),_InputBox__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/InputBox/index.ts"),_Icon__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/Icon/Icon.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Data Display/Icon",component:_Icon__WEBPACK_IMPORTED_MODULE_6__.I},iconsList=Object.keys(_rocket_chat_icons__WEBPACK_IMPORTED_MODULE_1___default()).sort(((a,b)=>a.localeCompare(b))),Default=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Box__WEBPACK_IMPORTED_MODULE_3__.Ay,{color:"default",children:iconsList.map((name=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Icon__WEBPACK_IMPORTED_MODULE_6__.I,{name,size:"x40"},name)))}),AvailableIcons=()=>{const[filter,setFilter]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(""),filteredIcons=iconsList.filter((name=>name.toLowerCase().includes(filter.toLowerCase())));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Box__WEBPACK_IMPORTED_MODULE_3__.Ay,{display:"flex",flexDirection:"column",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Box__WEBPACK_IMPORTED_MODULE_3__.Ay,{maxWidth:"x200",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_InputBox__WEBPACK_IMPORTED_MODULE_5__.Ay,{type:"text",value:filter,onChange:e=>setFilter(e.target.value),placeholder:"Search icons",addon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Icon__WEBPACK_IMPORTED_MODULE_6__.I,{name:"magnifier",size:"x20"})})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Divider__WEBPACK_IMPORTED_MODULE_4__.c,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Box__WEBPACK_IMPORTED_MODULE_3__.Ay,{display:"flex",flexWrap:"wrap",alignContent:"flex-start",textAlign:"center",height:"90vh",overflow:"auto",children:filteredIcons.map(((name,index)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_Box__WEBPACK_IMPORTED_MODULE_3__.Ay,{mb:"x32",mi:"x8",flexShrink:0,flexGrow:0,flexBasis:"128px",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Box__WEBPACK_IMPORTED_MODULE_3__.Ay,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Icon__WEBPACK_IMPORTED_MODULE_6__.I,{name,size:"x40",color:"default"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Box__WEBPACK_IMPORTED_MODULE_3__.Ay,{color:"hint",children:name})]},index)))})]})},__namedExportsOrder=["Default","AvailableIcons"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"() => <Box color='default'>\n    {iconsList.map(name => <Icon key={name} name={name} size='x40' />)}\n  </Box>",...Default.parameters?.docs?.source}}},AvailableIcons.parameters={...AvailableIcons.parameters,docs:{...AvailableIcons.parameters?.docs,source:{originalSource:"() => {\n  const [filter, setFilter] = useState('');\n  const filteredIcons = iconsList.filter(name => name.toLowerCase().includes(filter.toLowerCase()));\n  return <>\n      <Box display='flex' flexDirection='column'>\n        <Box maxWidth='x200'>\n          <InputBox type='text' value={filter} onChange={e => setFilter((e.target as HTMLInputElement).value)} placeholder='Search icons' addon={<Icon name='magnifier' size='x20' />} />\n        </Box>\n      </Box>\n      <Divider />\n      <Box display='flex' flexWrap='wrap' alignContent='flex-start' textAlign='center' height='90vh' overflow='auto'>\n        {filteredIcons.map((name, index) => <Box key={index} mb='x32' mi='x8' flexShrink={0} flexGrow={0} flexBasis='128px'>\n            <Box>\n              <Icon name={name} size='x40' color='default' />\n            </Box>\n            <Box color='hint'>{name}</Box>\n          </Box>)}\n      </Box>\n    </>;\n}",...AvailableIcons.parameters?.docs?.source}}}}}]);